// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: protobuf/ligolo.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_protobuf_ligolo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{0}
}

type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Object        []byte                 `protobuf:"bytes,1,opt,name=Object,proto3" json:"Object,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=Reason,proto3" json:"Reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_protobuf_ligolo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetObject() []byte {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *Error) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_protobuf_ligolo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Event) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Session struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Alias         string                 `protobuf:"bytes,2,opt,name=Alias,proto3" json:"Alias,omitempty"`
	Hostname      string                 `protobuf:"bytes,3,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Tun           *Tun                   `protobuf:"bytes,4,opt,name=Tun,proto3" json:"Tun,omitempty"`
	IsConnected   bool                   `protobuf:"varint,5,opt,name=IsConnected,proto3" json:"IsConnected,omitempty"`
	IsRelaying    bool                   `protobuf:"varint,6,opt,name=IsRelaying,proto3" json:"IsRelaying,omitempty"`
	Interfaces    []*Interface           `protobuf:"bytes,7,rep,name=Interfaces,proto3" json:"Interfaces,omitempty"`
	Redirectors   []*Redirector          `protobuf:"bytes,8,rep,name=Redirectors,proto3" json:"Redirectors,omitempty"`
	FirstSeen     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=FirstSeen,proto3" json:"FirstSeen,omitempty"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=LastSeen,proto3" json:"LastSeen,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_protobuf_ligolo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{3}
}

func (x *Session) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Session) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Session) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Session) GetTun() *Tun {
	if x != nil {
		return x.Tun
	}
	return nil
}

func (x *Session) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

func (x *Session) GetIsRelaying() bool {
	if x != nil {
		return x.IsRelaying
	}
	return false
}

func (x *Session) GetInterfaces() []*Interface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *Session) GetRedirectors() []*Redirector {
	if x != nil {
		return x.Redirectors
	}
	return nil
}

func (x *Session) GetFirstSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstSeen
	}
	return nil
}

func (x *Session) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type Tun struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Routes        []*Route               `protobuf:"bytes,2,rep,name=Routes,proto3" json:"Routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tun) Reset() {
	*x = Tun{}
	mi := &file_protobuf_ligolo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tun) ProtoMessage() {}

func (x *Tun) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tun.ProtoReflect.Descriptor instead.
func (*Tun) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{4}
}

func (x *Tun) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tun) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type Interface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	IPs           []string               `protobuf:"bytes,2,rep,name=IPs,proto3" json:"IPs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Interface) Reset() {
	*x = Interface{}
	mi := &file_protobuf_ligolo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{5}
}

func (x *Interface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface) GetIPs() []string {
	if x != nil {
		return x.IPs
	}
	return nil
}

type Route struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cidr          string                 `protobuf:"bytes,1,opt,name=Cidr,proto3" json:"Cidr,omitempty"`
	IsLoopback    bool                   `protobuf:"varint,2,opt,name=IsLoopback,proto3" json:"IsLoopback,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_protobuf_ligolo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{6}
}

func (x *Route) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Route) GetIsLoopback() bool {
	if x != nil {
		return x.IsLoopback
	}
	return false
}

type Redirector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Protocol      string                 `protobuf:"bytes,2,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	From          string                 `protobuf:"bytes,3,opt,name=From,proto3" json:"From,omitempty"`
	To            string                 `protobuf:"bytes,4,opt,name=To,proto3" json:"To,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Redirector) Reset() {
	*x = Redirector{}
	mi := &file_protobuf_ligolo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Redirector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redirector) ProtoMessage() {}

func (x *Redirector) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redirector.ProtoReflect.Descriptor instead.
func (*Redirector) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{7}
}

func (x *Redirector) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Redirector) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Redirector) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Redirector) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type Cert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ExpiryDate    string                 `protobuf:"bytes,2,opt,name=ExpiryDate,proto3" json:"ExpiryDate,omitempty"`
	Certificate   []byte                 `protobuf:"bytes,3,opt,name=Certificate,proto3" json:"Certificate,omitempty"`
	Key           []byte                 `protobuf:"bytes,4,opt,name=Key,proto3" json:"Key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cert) Reset() {
	*x = Cert{}
	mi := &file_protobuf_ligolo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cert) ProtoMessage() {}

func (x *Cert) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cert.ProtoReflect.Descriptor instead.
func (*Cert) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{8}
}

func (x *Cert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cert) GetExpiryDate() string {
	if x != nil {
		return x.ExpiryDate
	}
	return ""
}

func (x *Cert) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *Cert) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type Operator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	IsAdmin       bool                   `protobuf:"varint,2,opt,name=IsAdmin,proto3" json:"IsAdmin,omitempty"`
	Server        string                 `protobuf:"bytes,3,opt,name=Server,proto3" json:"Server,omitempty"`
	IsOnline      bool                   `protobuf:"varint,4,opt,name=IsOnline,proto3" json:"IsOnline,omitempty"`
	Cert          *Cert                  `protobuf:"bytes,5,opt,name=Cert,proto3" json:"Cert,omitempty"`
	CA            []byte                 `protobuf:"bytes,6,opt,name=CA,proto3" json:"CA,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Operator) Reset() {
	*x = Operator{}
	mi := &file_protobuf_ligolo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator) ProtoMessage() {}

func (x *Operator) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator.ProtoReflect.Descriptor instead.
func (*Operator) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{9}
}

func (x *Operator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Operator) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *Operator) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *Operator) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *Operator) GetCert() *Cert {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *Operator) GetCA() []byte {
	if x != nil {
		return x.CA
	}
	return nil
}

type Config struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OperatorServer string                 `protobuf:"bytes,1,opt,name=OperatorServer,proto3" json:"OperatorServer,omitempty"`
	AgentServer    string                 `protobuf:"bytes,2,opt,name=AgentServer,proto3" json:"AgentServer,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_protobuf_ligolo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{10}
}

func (x *Config) GetOperatorServer() string {
	if x != nil {
		return x.OperatorServer
	}
	return ""
}

func (x *Config) GetAgentServer() string {
	if x != nil {
		return x.AgentServer
	}
	return ""
}

type AddRedirectorReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	Protocol      string                 `protobuf:"bytes,2,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	From          string                 `protobuf:"bytes,3,opt,name=From,proto3" json:"From,omitempty"`
	To            string                 `protobuf:"bytes,4,opt,name=To,proto3" json:"To,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRedirectorReq) Reset() {
	*x = AddRedirectorReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRedirectorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRedirectorReq) ProtoMessage() {}

func (x *AddRedirectorReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRedirectorReq.ProtoReflect.Descriptor instead.
func (*AddRedirectorReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{11}
}

func (x *AddRedirectorReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *AddRedirectorReq) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *AddRedirectorReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *AddRedirectorReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type DelRedirectorReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	RedirectorID  string                 `protobuf:"bytes,2,opt,name=RedirectorID,proto3" json:"RedirectorID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelRedirectorReq) Reset() {
	*x = DelRedirectorReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelRedirectorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRedirectorReq) ProtoMessage() {}

func (x *DelRedirectorReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRedirectorReq.ProtoReflect.Descriptor instead.
func (*DelRedirectorReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{12}
}

func (x *DelRedirectorReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *DelRedirectorReq) GetRedirectorID() string {
	if x != nil {
		return x.RedirectorID
	}
	return ""
}

type GetSessionsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*Session             `protobuf:"bytes,1,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionsResp) Reset() {
	*x = GetSessionsResp{}
	mi := &file_protobuf_ligolo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionsResp) ProtoMessage() {}

func (x *GetSessionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionsResp.ProtoReflect.Descriptor instead.
func (*GetSessionsResp) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{13}
}

func (x *GetSessionsResp) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type RenameSessionReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	Alias         string                 `protobuf:"bytes,2,opt,name=Alias,proto3" json:"Alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameSessionReq) Reset() {
	*x = RenameSessionReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameSessionReq) ProtoMessage() {}

func (x *RenameSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameSessionReq.ProtoReflect.Descriptor instead.
func (*RenameSessionReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{14}
}

func (x *RenameSessionReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RenameSessionReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type StartRelayReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRelayReq) Reset() {
	*x = StartRelayReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRelayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRelayReq) ProtoMessage() {}

func (x *StartRelayReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRelayReq.ProtoReflect.Descriptor instead.
func (*StartRelayReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{15}
}

func (x *StartRelayReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type StopRelayReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRelayReq) Reset() {
	*x = StopRelayReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRelayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRelayReq) ProtoMessage() {}

func (x *StopRelayReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRelayReq.ProtoReflect.Descriptor instead.
func (*StopRelayReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{16}
}

func (x *StopRelayReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type KillSessionReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillSessionReq) Reset() {
	*x = KillSessionReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillSessionReq) ProtoMessage() {}

func (x *KillSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillSessionReq.ProtoReflect.Descriptor instead.
func (*KillSessionReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{17}
}

func (x *KillSessionReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type AddRouteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	Route         *Route                 `protobuf:"bytes,2,opt,name=Route,proto3" json:"Route,omitempty"`
	Force         bool                   `protobuf:"varint,3,opt,name=Force,proto3" json:"Force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRouteReq) Reset() {
	*x = AddRouteReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRouteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRouteReq) ProtoMessage() {}

func (x *AddRouteReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRouteReq.ProtoReflect.Descriptor instead.
func (*AddRouteReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{18}
}

func (x *AddRouteReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *AddRouteReq) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *AddRouteReq) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type AddRouteResp struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OverlappingSession *Session               `protobuf:"bytes,1,opt,name=OverlappingSession,proto3" json:"OverlappingSession,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AddRouteResp) Reset() {
	*x = AddRouteResp{}
	mi := &file_protobuf_ligolo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRouteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRouteResp) ProtoMessage() {}

func (x *AddRouteResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRouteResp.ProtoReflect.Descriptor instead.
func (*AddRouteResp) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{19}
}

func (x *AddRouteResp) GetOverlappingSession() *Session {
	if x != nil {
		return x.OverlappingSession
	}
	return nil
}

type DelRouteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	Cidr          string                 `protobuf:"bytes,2,opt,name=Cidr,proto3" json:"Cidr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelRouteReq) Reset() {
	*x = DelRouteReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelRouteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRouteReq) ProtoMessage() {}

func (x *DelRouteReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRouteReq.ProtoReflect.Descriptor instead.
func (*DelRouteReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{20}
}

func (x *DelRouteReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *DelRouteReq) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

type GenerateAgentReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Servers        string                 `protobuf:"bytes,1,opt,name=Servers,proto3" json:"Servers,omitempty"`
	GOOS           string                 `protobuf:"bytes,2,opt,name=GOOS,proto3" json:"GOOS,omitempty"`
	GOARCH         string                 `protobuf:"bytes,3,opt,name=GOARCH,proto3" json:"GOARCH,omitempty"`
	Obfuscate      bool                   `protobuf:"varint,4,opt,name=Obfuscate,proto3" json:"Obfuscate,omitempty"`
	ProxyServer    string                 `protobuf:"bytes,5,opt,name=ProxyServer,proto3" json:"ProxyServer,omitempty"`
	IgnoreEnvProxy bool                   `protobuf:"varint,6,opt,name=IgnoreEnvProxy,proto3" json:"IgnoreEnvProxy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GenerateAgentReq) Reset() {
	*x = GenerateAgentReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateAgentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAgentReq) ProtoMessage() {}

func (x *GenerateAgentReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAgentReq.ProtoReflect.Descriptor instead.
func (*GenerateAgentReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{21}
}

func (x *GenerateAgentReq) GetServers() string {
	if x != nil {
		return x.Servers
	}
	return ""
}

func (x *GenerateAgentReq) GetGOOS() string {
	if x != nil {
		return x.GOOS
	}
	return ""
}

func (x *GenerateAgentReq) GetGOARCH() string {
	if x != nil {
		return x.GOARCH
	}
	return ""
}

func (x *GenerateAgentReq) GetObfuscate() bool {
	if x != nil {
		return x.Obfuscate
	}
	return false
}

func (x *GenerateAgentReq) GetProxyServer() string {
	if x != nil {
		return x.ProxyServer
	}
	return ""
}

func (x *GenerateAgentReq) GetIgnoreEnvProxy() bool {
	if x != nil {
		return x.IgnoreEnvProxy
	}
	return false
}

type GenerateAgentResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentBinary   []byte                 `protobuf:"bytes,1,opt,name=AgentBinary,proto3" json:"AgentBinary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateAgentResp) Reset() {
	*x = GenerateAgentResp{}
	mi := &file_protobuf_ligolo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateAgentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAgentResp) ProtoMessage() {}

func (x *GenerateAgentResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAgentResp.ProtoReflect.Descriptor instead.
func (*GenerateAgentResp) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{22}
}

func (x *GenerateAgentResp) GetAgentBinary() []byte {
	if x != nil {
		return x.AgentBinary
	}
	return nil
}

type GetCertsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Certs         []*Cert                `protobuf:"bytes,1,rep,name=Certs,proto3" json:"Certs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCertsResp) Reset() {
	*x = GetCertsResp{}
	mi := &file_protobuf_ligolo_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCertsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertsResp) ProtoMessage() {}

func (x *GetCertsResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertsResp.ProtoReflect.Descriptor instead.
func (*GetCertsResp) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{23}
}

func (x *GetCertsResp) GetCerts() []*Cert {
	if x != nil {
		return x.Certs
	}
	return nil
}

type RegenCertReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegenCertReq) Reset() {
	*x = RegenCertReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenCertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenCertReq) ProtoMessage() {}

func (x *RegenCertReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenCertReq.ProtoReflect.Descriptor instead.
func (*RegenCertReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{24}
}

func (x *RegenCertReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetOperatorsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operators     []*Operator            `protobuf:"bytes,1,rep,name=Operators,proto3" json:"Operators,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOperatorsResp) Reset() {
	*x = GetOperatorsResp{}
	mi := &file_protobuf_ligolo_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorsResp) ProtoMessage() {}

func (x *GetOperatorsResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorsResp.ProtoReflect.Descriptor instead.
func (*GetOperatorsResp) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{25}
}

func (x *GetOperatorsResp) GetOperators() []*Operator {
	if x != nil {
		return x.Operators
	}
	return nil
}

type ExportOperatorReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportOperatorReq) Reset() {
	*x = ExportOperatorReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportOperatorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportOperatorReq) ProtoMessage() {}

func (x *ExportOperatorReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportOperatorReq.ProtoReflect.Descriptor instead.
func (*ExportOperatorReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{26}
}

func (x *ExportOperatorReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ExportOperatorResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operator      *Operator              `protobuf:"bytes,1,opt,name=Operator,proto3" json:"Operator,omitempty"`
	Config        []byte                 `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportOperatorResp) Reset() {
	*x = ExportOperatorResp{}
	mi := &file_protobuf_ligolo_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportOperatorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportOperatorResp) ProtoMessage() {}

func (x *ExportOperatorResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportOperatorResp.ProtoReflect.Descriptor instead.
func (*ExportOperatorResp) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{27}
}

func (x *ExportOperatorResp) GetOperator() *Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *ExportOperatorResp) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type AddOperatorReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operator      *Operator              `protobuf:"bytes,1,opt,name=Operator,proto3" json:"Operator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOperatorReq) Reset() {
	*x = AddOperatorReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOperatorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOperatorReq) ProtoMessage() {}

func (x *AddOperatorReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOperatorReq.ProtoReflect.Descriptor instead.
func (*AddOperatorReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{28}
}

func (x *AddOperatorReq) GetOperator() *Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

type AddOperatorResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operator      *Operator              `protobuf:"bytes,1,opt,name=Operator,proto3" json:"Operator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOperatorResp) Reset() {
	*x = AddOperatorResp{}
	mi := &file_protobuf_ligolo_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOperatorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOperatorResp) ProtoMessage() {}

func (x *AddOperatorResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOperatorResp.ProtoReflect.Descriptor instead.
func (*AddOperatorResp) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{29}
}

func (x *AddOperatorResp) GetOperator() *Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

type DelOperatorReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelOperatorReq) Reset() {
	*x = DelOperatorReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelOperatorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelOperatorReq) ProtoMessage() {}

func (x *DelOperatorReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelOperatorReq.ProtoReflect.Descriptor instead.
func (*DelOperatorReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{30}
}

func (x *DelOperatorReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PromoteOperatorReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromoteOperatorReq) Reset() {
	*x = PromoteOperatorReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromoteOperatorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteOperatorReq) ProtoMessage() {}

func (x *PromoteOperatorReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteOperatorReq.ProtoReflect.Descriptor instead.
func (*PromoteOperatorReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{31}
}

func (x *PromoteOperatorReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DemoteOperatorReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DemoteOperatorReq) Reset() {
	*x = DemoteOperatorReq{}
	mi := &file_protobuf_ligolo_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DemoteOperatorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemoteOperatorReq) ProtoMessage() {}

func (x *DemoteOperatorReq) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemoteOperatorReq.ProtoReflect.Descriptor instead.
func (*DemoteOperatorReq) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{32}
}

func (x *DemoteOperatorReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetMetadataResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operator      *Operator              `protobuf:"bytes,1,opt,name=Operator,proto3" json:"Operator,omitempty"`
	Config        *Config                `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataResp) Reset() {
	*x = GetMetadataResp{}
	mi := &file_protobuf_ligolo_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataResp) ProtoMessage() {}

func (x *GetMetadataResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_ligolo_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataResp.ProtoReflect.Descriptor instead.
func (*GetMetadataResp) Descriptor() ([]byte, []int) {
	return file_protobuf_ligolo_proto_rawDescGZIP(), []int{33}
}

func (x *GetMetadataResp) GetOperator() *Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *GetMetadataResp) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_protobuf_ligolo_proto protoreflect.FileDescriptor

var file_protobuf_ligolo_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6c, 0x69, 0x67, 0x6f, 0x6c,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x37, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x87, 0x03, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x03, 0x54, 0x75, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x54, 0x75, 0x6e, 0x52, 0x03, 0x54, 0x75, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x12, 0x31, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x67,
	0x6f, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x22, 0x40, 0x0a,
	0x03, 0x54, 0x75, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c,
	0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22,
	0x31, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x49, 0x50, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x49,
	0x50, 0x73, 0x22, 0x3b, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x64, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x22,
	0x5c, 0x0a, 0x0a, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x22, 0x6e, 0x0a,
	0x04, 0x43, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0x9e, 0x01,
	0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x04,
	0x43, 0x65, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x69, 0x67,
	0x6f, 0x6c, 0x6f, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x04, 0x43, 0x65, 0x72, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x43, 0x41, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x43, 0x41, 0x22, 0x52,
	0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0x70, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x54, 0x6f, 0x22, 0x54, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a,
	0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x22, 0x2d, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x2c, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x2e, 0x0a, 0x0e, 0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x66, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x69,
	0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x12, 0x4f, 0x76, 0x65, 0x72, 0x6c,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x64, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x64, 0x72, 0x22, 0xc0, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x4f, 0x4f, 0x53,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x4f, 0x4f, 0x53, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x4f, 0x41, 0x52, 0x43, 0x48, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x4f,
	0x41, 0x52, 0x43, 0x48, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x6e,
	0x76, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x22, 0x35, 0x0a, 0x11,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x22, 0x32, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x43, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x43, 0x65, 0x72, 0x74,
	0x52, 0x05, 0x43, 0x65, 0x72, 0x74, 0x73, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22,
	0x27, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c,
	0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x3e, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c,
	0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x67, 0x6f,
	0x6c, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x24, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x67,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2c, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x26, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x32, 0x92, 0x09, 0x0a, 0x06, 0x4c, 0x69, 0x67, 0x6f,
	0x6c, 0x6f, 0x12, 0x28, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x0d, 0x2e, 0x6c, 0x69, 0x67,
	0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f,
	0x6c, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x37, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0d, 0x2e, 0x6c, 0x69,
	0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x6c, 0x69, 0x67,
	0x6f, 0x6c, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x0d, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f,
	0x6c, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x4b, 0x69,
	0x6c, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x6c, 0x69, 0x67, 0x6f,
	0x6c, 0x6f, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x15, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x14, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69,
	0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c,
	0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x13, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c,
	0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0d,
	0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x12, 0x0d, 0x2e, 0x6c, 0x69,
	0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x6c, 0x69, 0x67,
	0x6f, 0x6c, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x12,
	0x14, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x43, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x6c, 0x69,
	0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x2e,
	0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x69, 0x67, 0x6f,
	0x6c, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x44, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c,
	0x6f, 0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x74, 0x70, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6c, 0x69, 0x67, 0x6f, 0x6c, 0x6f, 0x2d, 0x6d, 0x70, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protobuf_ligolo_proto_rawDescOnce sync.Once
	file_protobuf_ligolo_proto_rawDescData []byte
)

func file_protobuf_ligolo_proto_rawDescGZIP() []byte {
	file_protobuf_ligolo_proto_rawDescOnce.Do(func() {
		file_protobuf_ligolo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_ligolo_proto_rawDesc), len(file_protobuf_ligolo_proto_rawDesc)))
	})
	return file_protobuf_ligolo_proto_rawDescData
}

var file_protobuf_ligolo_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_protobuf_ligolo_proto_goTypes = []any{
	(*Empty)(nil),                 // 0: ligolo.Empty
	(*Error)(nil),                 // 1: ligolo.Error
	(*Event)(nil),                 // 2: ligolo.Event
	(*Session)(nil),               // 3: ligolo.Session
	(*Tun)(nil),                   // 4: ligolo.Tun
	(*Interface)(nil),             // 5: ligolo.Interface
	(*Route)(nil),                 // 6: ligolo.Route
	(*Redirector)(nil),            // 7: ligolo.Redirector
	(*Cert)(nil),                  // 8: ligolo.Cert
	(*Operator)(nil),              // 9: ligolo.Operator
	(*Config)(nil),                // 10: ligolo.Config
	(*AddRedirectorReq)(nil),      // 11: ligolo.AddRedirectorReq
	(*DelRedirectorReq)(nil),      // 12: ligolo.DelRedirectorReq
	(*GetSessionsResp)(nil),       // 13: ligolo.GetSessionsResp
	(*RenameSessionReq)(nil),      // 14: ligolo.RenameSessionReq
	(*StartRelayReq)(nil),         // 15: ligolo.StartRelayReq
	(*StopRelayReq)(nil),          // 16: ligolo.StopRelayReq
	(*KillSessionReq)(nil),        // 17: ligolo.KillSessionReq
	(*AddRouteReq)(nil),           // 18: ligolo.AddRouteReq
	(*AddRouteResp)(nil),          // 19: ligolo.AddRouteResp
	(*DelRouteReq)(nil),           // 20: ligolo.DelRouteReq
	(*GenerateAgentReq)(nil),      // 21: ligolo.GenerateAgentReq
	(*GenerateAgentResp)(nil),     // 22: ligolo.GenerateAgentResp
	(*GetCertsResp)(nil),          // 23: ligolo.GetCertsResp
	(*RegenCertReq)(nil),          // 24: ligolo.RegenCertReq
	(*GetOperatorsResp)(nil),      // 25: ligolo.GetOperatorsResp
	(*ExportOperatorReq)(nil),     // 26: ligolo.ExportOperatorReq
	(*ExportOperatorResp)(nil),    // 27: ligolo.ExportOperatorResp
	(*AddOperatorReq)(nil),        // 28: ligolo.AddOperatorReq
	(*AddOperatorResp)(nil),       // 29: ligolo.AddOperatorResp
	(*DelOperatorReq)(nil),        // 30: ligolo.DelOperatorReq
	(*PromoteOperatorReq)(nil),    // 31: ligolo.PromoteOperatorReq
	(*DemoteOperatorReq)(nil),     // 32: ligolo.DemoteOperatorReq
	(*GetMetadataResp)(nil),       // 33: ligolo.GetMetadataResp
	(*timestamppb.Timestamp)(nil), // 34: google.protobuf.Timestamp
}
var file_protobuf_ligolo_proto_depIdxs = []int32{
	4,  // 0: ligolo.Session.Tun:type_name -> ligolo.Tun
	5,  // 1: ligolo.Session.Interfaces:type_name -> ligolo.Interface
	7,  // 2: ligolo.Session.Redirectors:type_name -> ligolo.Redirector
	34, // 3: ligolo.Session.FirstSeen:type_name -> google.protobuf.Timestamp
	34, // 4: ligolo.Session.LastSeen:type_name -> google.protobuf.Timestamp
	6,  // 5: ligolo.Tun.Routes:type_name -> ligolo.Route
	8,  // 6: ligolo.Operator.Cert:type_name -> ligolo.Cert
	3,  // 7: ligolo.GetSessionsResp.Sessions:type_name -> ligolo.Session
	6,  // 8: ligolo.AddRouteReq.Route:type_name -> ligolo.Route
	3,  // 9: ligolo.AddRouteResp.OverlappingSession:type_name -> ligolo.Session
	8,  // 10: ligolo.GetCertsResp.Certs:type_name -> ligolo.Cert
	9,  // 11: ligolo.GetOperatorsResp.Operators:type_name -> ligolo.Operator
	9,  // 12: ligolo.ExportOperatorResp.Operator:type_name -> ligolo.Operator
	9,  // 13: ligolo.AddOperatorReq.Operator:type_name -> ligolo.Operator
	9,  // 14: ligolo.AddOperatorResp.Operator:type_name -> ligolo.Operator
	9,  // 15: ligolo.GetMetadataResp.Operator:type_name -> ligolo.Operator
	10, // 16: ligolo.GetMetadataResp.Config:type_name -> ligolo.Config
	0,  // 17: ligolo.Ligolo.Join:input_type -> ligolo.Empty
	0,  // 18: ligolo.Ligolo.GetMetadata:input_type -> ligolo.Empty
	0,  // 19: ligolo.Ligolo.GetSessions:input_type -> ligolo.Empty
	14, // 20: ligolo.Ligolo.RenameSession:input_type -> ligolo.RenameSessionReq
	17, // 21: ligolo.Ligolo.KillSession:input_type -> ligolo.KillSessionReq
	15, // 22: ligolo.Ligolo.StartRelay:input_type -> ligolo.StartRelayReq
	16, // 23: ligolo.Ligolo.StopRelay:input_type -> ligolo.StopRelayReq
	18, // 24: ligolo.Ligolo.AddRoute:input_type -> ligolo.AddRouteReq
	20, // 25: ligolo.Ligolo.DelRoute:input_type -> ligolo.DelRouteReq
	11, // 26: ligolo.Ligolo.AddRedirector:input_type -> ligolo.AddRedirectorReq
	12, // 27: ligolo.Ligolo.DelRedirector:input_type -> ligolo.DelRedirectorReq
	0,  // 28: ligolo.Ligolo.GetCerts:input_type -> ligolo.Empty
	24, // 29: ligolo.Ligolo.RegenCert:input_type -> ligolo.RegenCertReq
	0,  // 30: ligolo.Ligolo.GetOperators:input_type -> ligolo.Empty
	26, // 31: ligolo.Ligolo.ExportOperator:input_type -> ligolo.ExportOperatorReq
	28, // 32: ligolo.Ligolo.AddOperator:input_type -> ligolo.AddOperatorReq
	30, // 33: ligolo.Ligolo.DelOperator:input_type -> ligolo.DelOperatorReq
	31, // 34: ligolo.Ligolo.PromoteOperator:input_type -> ligolo.PromoteOperatorReq
	32, // 35: ligolo.Ligolo.DemoteOperator:input_type -> ligolo.DemoteOperatorReq
	21, // 36: ligolo.Ligolo.GenerateAgent:input_type -> ligolo.GenerateAgentReq
	2,  // 37: ligolo.Ligolo.Join:output_type -> ligolo.Event
	33, // 38: ligolo.Ligolo.GetMetadata:output_type -> ligolo.GetMetadataResp
	13, // 39: ligolo.Ligolo.GetSessions:output_type -> ligolo.GetSessionsResp
	0,  // 40: ligolo.Ligolo.RenameSession:output_type -> ligolo.Empty
	0,  // 41: ligolo.Ligolo.KillSession:output_type -> ligolo.Empty
	0,  // 42: ligolo.Ligolo.StartRelay:output_type -> ligolo.Empty
	0,  // 43: ligolo.Ligolo.StopRelay:output_type -> ligolo.Empty
	19, // 44: ligolo.Ligolo.AddRoute:output_type -> ligolo.AddRouteResp
	0,  // 45: ligolo.Ligolo.DelRoute:output_type -> ligolo.Empty
	0,  // 46: ligolo.Ligolo.AddRedirector:output_type -> ligolo.Empty
	0,  // 47: ligolo.Ligolo.DelRedirector:output_type -> ligolo.Empty
	23, // 48: ligolo.Ligolo.GetCerts:output_type -> ligolo.GetCertsResp
	0,  // 49: ligolo.Ligolo.RegenCert:output_type -> ligolo.Empty
	25, // 50: ligolo.Ligolo.GetOperators:output_type -> ligolo.GetOperatorsResp
	27, // 51: ligolo.Ligolo.ExportOperator:output_type -> ligolo.ExportOperatorResp
	29, // 52: ligolo.Ligolo.AddOperator:output_type -> ligolo.AddOperatorResp
	0,  // 53: ligolo.Ligolo.DelOperator:output_type -> ligolo.Empty
	0,  // 54: ligolo.Ligolo.PromoteOperator:output_type -> ligolo.Empty
	0,  // 55: ligolo.Ligolo.DemoteOperator:output_type -> ligolo.Empty
	22, // 56: ligolo.Ligolo.GenerateAgent:output_type -> ligolo.GenerateAgentResp
	37, // [37:57] is the sub-list for method output_type
	17, // [17:37] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_protobuf_ligolo_proto_init() }
func file_protobuf_ligolo_proto_init() {
	if File_protobuf_ligolo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_ligolo_proto_rawDesc), len(file_protobuf_ligolo_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_ligolo_proto_goTypes,
		DependencyIndexes: file_protobuf_ligolo_proto_depIdxs,
		MessageInfos:      file_protobuf_ligolo_proto_msgTypes,
	}.Build()
	File_protobuf_ligolo_proto = out.File
	file_protobuf_ligolo_proto_goTypes = nil
	file_protobuf_ligolo_proto_depIdxs = nil
}
